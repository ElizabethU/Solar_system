$(document).ready(function(){

    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );

    var center = new THREE.Vector3( 0, 0, 0 );

    var stars = THREEx.Planets.createStarfield()
    scene.add( stars )

    var mesh    = THREEx.Planets.createEarth()
    scene.add(mesh)

    mesh.position.x = 10

    camera.position.x = 17
    camera.lookAt( center )

    //var rotation = Rotation.IDENTITY

      var directionalLight = new THREE.DirectionalLight(0x999999);
      directionalLight.position.set(0, 0, 1.1);
      scene.add(directionalLight);

      var directionalLight = new THREE.DirectionalLight(0x999999);
      directionalLight.position.set(0, 0, -1.1);
      scene.add(directionalLight);

      var directionalLight = new THREE.DirectionalLight(0x999999);
      directionalLight.position.set(0, 1.1, 0);
      scene.add(directionalLight);

      var directionalLight = new THREE.DirectionalLight(0x999999);
      directionalLight.position.set(0, -1.1, 0);
      scene.add(directionalLight);

      var directionalLight = new THREE.DirectionalLight(0x999999);
      directionalLight.position.set(1.1, 0, 0);
      scene.add(directionalLight);

      var directionalLight = new THREE.DirectionalLight(0x999999);
      directionalLight.position.set(-1.1, 0, 0);
      scene.add(directionalLight);

      // var ambientLight = new THREE.AmbientLight(0x333333);
      // scene.add(ambientLight);
    // ThreeX click event library
    var domEvents   = new THREEx.DomEvents(camera, renderer.domElement)
    $("li").each( function(index, planet ){

      var planet = $(planet)

      window[planet.data('name')] = new THREE.Mesh( 
        new THREE.SphereGeometry(planet.data('diameter'),15,15),
        new THREE.MeshPhongMaterial( { 
          color: parseInt('0x' + planet.data('color'))
        }));
      scene.add( window[planet.data('name')] );
      eval(planet.data('name')).position.x = planet.data('x') * 10
      eval(planet.data('name')).position.y = planet.data('y') * 10
      eval(planet.data('name')).position.z = planet.data('z') * 10

      console.log( eval(planet.data('name')) )

      domEvents.addEventListener(eval(planet.data('name')), 'click', function(event){
        console.log( planet.data('name') );
        $( "#" + planet.data('name') + "_info" ).modal();
      }, false);

    });

    function render() {
        requestAnimationFrame(render);
        renderer.render(scene, camera);
      }

    render();

var speed = .1
var theta1 = 0
var theta2 = 0
var hemisphereSwitcher = 1

  $( document ).keydown(function(e) {
    if (e.keyCode < 37 || e.keyCode > 40) return true
    var radius = 17

    // Up key
    if (e.keyCode === 38) {
      //alert( "Up!" );
      //if (theta1 > 3.0415 * 2) {
      //  theta1 = -3.0415 * 2

      
      //}
      theta1 += speed
      console.log("Theta1: " + theta1)
      console.log("Sin Theta1: " + Math.sin( theta1 ))
      console.log("Cos Theta1: " + Math.cos( theta1 ))
    }
    // Down key
    if (e.keyCode === 40) {
      theta1 -= speed
      //alert( "Down!" )
      //if (theta1 < 0 ) {
      //  theta1 = 3.0415 * 2
      
      //};
      
      console.log("Theta1: " + theta1)
      console.log("Sin Theta1: " + Math.sin( theta1 ))
      console.log("Cos Theta1: " + Math.cos( theta1 ))


    }

    // Left key
    if (e.keyCode === 37) {
      //alert( "Left!" );
      theta2 -= speed
    }

    // Right key
    if (e.keyCode === 39) {
      //alert( "Right!" );
      theta2 += speed
    }; 

    //b = radius * Math.cos(Math.asin( camera.position.y / radius))
    camera.position.x = radius * Math.sin( theta1 ) * Math.cos( theta2 )
    camera.position.z = radius * Math.sin( theta1 ) * Math.sin( theta2 )
    camera.position.y = radius * Math.cos( theta1 ) // z in mathland, y in d3
    
    console.log("cameraX: " + camera.position.x);
    console.log("cameraY: " + camera.position.y);
    console.log("cameraZ: " + camera.position.z);


    camera.lookAt( center )
    console.log(camera.position)

    return false
  });
});