$(document).ready(function(){

    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );

    var center = new THREE.Vector3( 0, 0, 0 );

    camera.lookAt( center )

var tralfamador = new THREE.Mesh(
        new THREE.SphereGeometry(1.5,15,15),
        new THREE.MeshBasicMaterial( {
                color: 0xffffff
        }));
scene.add(tralfamador);

    // ThreeX click event library
    var domEvents   = new THREEx.DomEvents(camera, renderer.domElement)
    planets.forEach( function( planet ){

      window[planet.name] = new THREE.Mesh( 
        new THREE.SphereGeometry(planet.diameter,15,15),
        new THREE.MeshBasicMaterial( { 
          color: parseInt('0x' + planet.color)
        }));
      scene.add( window[planet.name] );
      eval(planet.name).position.x = planet.x * 10
      eval(planet.name).position.y = planet.y * 10
      eval(planet.name).position.z = planet.z * 10

      console.log( planet.name )

      domEvents.addEventListener(eval(planet.name), 'click', function(event){
        console.log( planet.name );
        $( "#" + planet.name + "_info" ).modal();
      }, false);

    });

    function render() {
        requestAnimationFrame(render);
        renderer.render(scene, camera);
      }

    render();

var speed = .1
var theta1 = 0
var theta2 = 0

  $( document ).keydown(function(e) {
    if (e.keyCode < 37 || e.keyCode > 40) return true
    var radius = 17

    if (e.keyCode === 38) {
      //alert( "Up!" );
      theta1 += speed
    } else if (e.keyCode === 40) {
      //alert( "Down!" );
      theta1 -= speed
    } else if (e.keyCode === 37) {
      //alert( "Left!" );
      theta2 -= speed
    } else if (e.keyCode === 39) {
      //alert( "Right!" );
      theta2 += speed
    }; 

    //b = radius * Math.cos(Math.asin( camera.position.y / radius))
    camera.position.x = radius * Math.sin( theta1 ) * Math.cos( theta2 )
    camera.position.z = radius * Math.sin( theta1 ) * Math.sin( theta2 )
    camera.position.y = radius * Math.cos( theta1 ) // z in mathland, y in d3
    camera.lookAt( center )
    console.log(camera.position)

    return false
  });
});