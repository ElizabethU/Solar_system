$(document).ready(function(){

    function capitalize(string)
    {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }

    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );


    var center = new THREE.Vector3( 0, 0, 0 );

    var stars = THREEx.Planets.createStarfield()
    scene.add( stars )

    camera.position.x = 17
    camera.lookAt( center )

    //var rotation = Rotation.IDENTITY

      // var directionalLight = new THREE.DirectionalLight(0x999999);
      // directionalLight.position.set(0, 0, 1.1);
      // scene.add(directionalLight);

      // var directionalLight = new THREE.DirectionalLight(0x999999);
      // directionalLight.position.set(0, 0, -1.1);
      // scene.add(directionalLight);

      // var directionalLight = new THREE.DirectionalLight(0x999999);
      // directionalLight.position.set(0, 1.1, 0);
      // scene.add(directionalLight);

      // var directionalLight = new THREE.DirectionalLight(0x999999);
      // directionalLight.position.set(0, -1.1, 0);
      // scene.add(directionalLight);

      // var directionalLight = new THREE.DirectionalLight(0x999999);
      // directionalLight.position.set(1.1, 0, 0);
      // scene.add(directionalLight);

      // var directionalLight = new THREE.DirectionalLight(0x999999);
      // directionalLight.position.set(-1.1, 0, 0);
      // scene.add(directionalLight);

      var ambientLight = new THREE.AmbientLight(0xffffff);
      scene.add(ambientLight);

    // ThreeX click event library
    var domEvents   = new THREEx.DomEvents(camera, renderer.domElement)

    $("li.planet").each( function(index, planet ){

      var planet = $(planet);

      if (planet.data('name') === 'sol') {
        window[planet.data('name')] = THREEx.Planets.createSun()
      } 
      else if (planet.data('planet') === 'planet') {

        window[planet.data('name')] = eval('THREEx.Planets.create' + capitalize(planet.data('name')) + '()')
        if (planet.data('rings') === true) {
          window[planet.data('name') + 'Ring' ] = eval('THREEx.Planets.create' + capitalize(planet.data('name')) + 'Ring()')
          scene.add( window[planet.data('name') + 'Ring'] );
        }

      } else {
        window[planet.data('name')] = new THREE.Mesh( 
          new THREE.SphereGeometry(planet.data('diameter'),15,15),
          new THREE.MeshPhongMaterial( { 
            color: parseInt('0x' + planet.data('color'))
          }));
      };
      scene.add( window[planet.data('name')] );
      eval(planet.data('name')).position.x = planet.data('x') * 8
      eval(planet.data('name')).position.y = planet.data('z') * 8
      eval(planet.data('name')).position.z = planet.data('y') * 8

      if (planet.data('rings') === true) {
        console.log("I am assigning, just wrong")
        eval(planet.data('name') + 'Ring').position.x = planet.data('x') * 8
        eval(planet.data('name') + 'Ring').position.y = planet.data('z') * 8
        eval(planet.data('name') + 'Ring').position.z = planet.data('y') * 8
      }

      domEvents.addEventListener(eval(planet.data('name')), 'click', function(event){
        console.log( planet.data('name') );
        if (planet.data('planet') === 'planet') {
          camera.position.x = eval(planet.data('name')).position.x + 1.3
          camera.position.y = eval(planet.data('name')).position.y
          camera.position.z = eval(planet.data('name')).position.z
          camera.lookAt(eval(planet.data('name')).position)
        }
        $(".modal").hide(0, function() {
          $('.heading').html("The Latest News On " + capitalize(planet.data('name')) )
          $.get("/articles?body_name=" + planet.data('name') ).then(function(data) {
            $('.news-modal').html(data)
            console.log(data)
          })
          $( "#info" ).show()
        });
      }, false);

    });

    $('.navbar-instructions').click(function(e) {
        $('.modal').hide()
        $('#instructions').show()
      })

    $('.navbar-dedication').click(function(e) {
        $('.modal').hide()
        $('#dedication').show()
      })

    $('.close').click(function(e){
          $('.modal').hide()
          $('.news-modal').html('')
        });

    function render() {
        requestAnimationFrame(render);
        renderer.render(scene, camera);
      }

    render();

var speed = .1
var theta1 = 1.57
var theta2 = 0
var hemisphereSwitcher = 1

  $( document ).keydown(function(e) {
    if (e.keyCode < 37 || e.keyCode > 40) return true
    var radius = 17

    if (e.keyCode === 38) {
      //alert( "Up!" );
      if (theta1 < 3.04){
        theta1 += speed
        console.log("Theta1: " + theta1)
        console.log("Sin Theta1: " + Math.sin( theta1 ))
        console.log("Cos Theta1: " + Math.cos( theta1 ))
      }
    }
    if (e.keyCode === 40) {
      if (theta1 > 0.1) {
        theta1 -= speed
        //alert( "Down!" )
        console.log("Theta1: " + theta1)
        console.log("Sin Theta1: " + Math.sin( theta1 ))
        console.log("Cos Theta1: " + Math.cos( theta1 ))
      }
    }
    if (e.keyCode === 37) {
      //alert( "Left!" );
      theta2 -= speed
    }
    if (e.keyCode === 39) {
      //alert( "Right!" );
      theta2 += speed
    }; 

    camera.position.x = radius * Math.sin( theta1 ) * Math.cos( theta2 )
    camera.position.z = radius * Math.sin( theta1 ) * Math.sin( theta2 )
    camera.position.y = radius * Math.cos( theta1 ) // z in mathland, y in d3
    
    console.log("cameraX: " + camera.position.x);
    console.log("cameraY: " + camera.position.y);
    console.log("cameraZ: " + camera.position.z);

    camera.lookAt( center )
    console.log(camera.position)

    return false
  });
});